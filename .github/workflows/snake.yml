name: Generate Snake

on:
  schedule:
    - cron: "0 0 * * *"    # Runs every day at midnight UTC
  workflow_dispatch:        # Allows manual triggering

permissions:
  contents: write           # Grants permission to commit files

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          # Ensure that the GITHUB_TOKEN is used for pushing
          persist-credentials: true   # This allows the token to be used for git push

      # Step 2: Generate Snake
      - name: Generate Snake
        uses: Platane/snk@v3
        with:
          github_user_name: ${{ github.repository_owner }}
          outputs: |
            dist/github-snake.svg
            dist/github-snake-dark.svg?palette=github-dark
            dist/ocean.gif?color_snake=orange&color_dots=#bfd6f6,#8dbdff,#64a1f4,#4b91f1,#3c7dd9

      # Step 3: Commit & Push Snake Files
      - name: Commit & Push Snake Files
        run: |
          # Configure Git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Add generated files to git
          git add dist/github-snake.svg dist/github-snake-dark.svg dist/ocean.gif

          # Check if there are any changes to commit
          if ! git diff --cached --quiet; then
            git commit -m "chore: update snake graphics [skip ci]"
            git push origin HEAD:${GITHUB_REF}
          else
            echo "No changes to commit."
          fi
